{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","fsubmit","e","preventDefault","console","log","datas","state","name","refs","value","roll","act","data","push","index","setState","myform","reset","focus","fRemove","i","splice","fEdit","title","this","className","Box","textAlign","color","fontWeight","ref","type","placeholder","Button","variant","onClick","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAuGeA,E,kDAhGb,WAAYC,GAAO,IAAD,8BACpB,cAAMA,IAaNC,QAAU,SAACC,GACTA,EAAEC,iBACFC,QAAQC,IAAI,QAEZ,IAAIC,EAAQ,EAAKC,MAAMD,MACnBE,EAAO,EAAKC,KAAKD,KAAKE,MACtBC,EAAO,EAAKF,KAAKE,KAAKD,MAE5B,GAAoB,IAAjB,EAAKH,MAAMK,IAAQ,CACpB,IAAIC,EAAK,CACPL,OAAKG,QAETL,EAAMQ,KAAKD,OACN,CACH,IAAIE,EAAO,EAAKR,MAAMQ,MACtBT,EAAMS,GAAOP,KAAKA,EAClBF,EAAMS,GAAOJ,KAAKA,EAEpB,EAAKK,SAAS,CACZV,MAAMA,EACNM,IAAI,IAIN,EAAKH,KAAKQ,OAAOC,QACjB,EAAKT,KAAKD,KAAKW,SAvCK,EA2CpBC,QAAS,SAACC,GACR,IAAIf,EAAM,EAAKC,MAAMD,MACrBA,EAAMgB,OAAOD,EAAE,GACf,EAAKL,SAAS,CACZV,MAAMA,IAER,EAAKG,KAAKQ,OAAOC,QACjB,EAAKT,KAAKD,KAAKW,SAlDG,EAqDpBI,MAAM,SAACF,GACL,IAAIR,EAAK,EAAKN,MAAMD,MAAMe,GAC1B,EAAKZ,KAAKD,KAAKE,MAAMG,EAAKL,KAC1B,EAAKC,KAAKE,KAAKD,MAAMG,EAAKF,KAG1B,EAAKK,SAAS,CACZJ,IAAI,EACJG,MAAMM,IAER,EAAKZ,KAAKD,KAAKW,SA7DjB,EAAKZ,MAAM,CACTiB,MAAO,yBACPZ,IAAI,EACJG,MAAM,GACNT,MAAM,IANY,E,qDAUpB,WACEmB,KAAKhB,KAAKD,KAAKW,U,oBAwDjB,WAAS,IAAD,OACFb,EAAMmB,KAAKlB,MAAMD,MACrB,OACE,sBAAKoB,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,SAASC,MAAM,eAAgBC,WAAW,iBAAzD,SAA2EL,KAAKlB,MAAMiB,QACtF,uBAAMO,IAAI,SAASL,UAAU,SAA7B,UACE,uBAAOM,KAAK,OAAOD,IAAI,OAAOE,YAAY,OAAOP,UAAU,cAC3D,uBAAOM,KAAK,OAAOD,IAAI,OAAOE,YAAY,UAAUP,UAAU,cAC7D,cAACQ,EAAA,EAAD,CAAQL,MAAM,UAAUM,QAAQ,YAAYC,QAAS,SAAClC,GAAD,OAAK,EAAKD,QAAQC,IAAIwB,UAAU,WAArF,wBAEH,8BACGpB,EAAM+B,KAAI,SAACxB,EAAKQ,GAAN,OACX,qBAAYK,UAAU,SAAtB,UACGL,EAAE,EADL,IACSR,EAAKL,KADd,IACqBK,EAAKF,KAExB,cAACuB,EAAA,EAAD,CAAQL,MAAM,YAAYM,QAAQ,YAAYC,QAAS,kBAAI,EAAKhB,QAAQC,IAAIK,UAAU,WAAtF,oBAEA,cAACQ,EAAA,EAAD,CAAQL,MAAM,UAAUM,QAAQ,GAAGC,QAAS,kBAAI,EAAKb,MAAMF,IAAIK,UAAU,WAAzE,oBALOL,e,GAhFCiB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7eb422b1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\n\nclass App extends Component{\n  constructor(props){\nsuper(props);\nthis.state={\n  title: 'React Crud Application',\n  act:0,\n  index:'',\n  datas:[]\n}\n }\n\ncomponentDidMount(){\n  this.refs.name.focus();\n}\n\nfsubmit = (e)=>{\n  e.preventDefault();\n  console.log('crud');\n\n  let datas = this.state.datas;\n  let name = this.refs.name.value;\n  let roll = this.refs.roll.value;\n\nif(this.state.act===0){\n  let data={\n    name,roll\n  }\ndatas.push(data);\n}else{\n  let index =this.state.index;\n  datas[index].name=name;\n  datas[index].roll=roll;\n}\nthis.setState({\n  datas:datas,\n  act:0\n});\n\n\nthis.refs.myform.reset();\nthis.refs.name.focus();\n\n}\n\nfRemove= (i) => {\n  let datas=this.state.datas;\n  datas.splice(i,1);\n  this.setState({\n    datas:datas\n  });\n  this.refs.myform.reset();\n  this.refs.name.focus();\n}\n\nfEdit=(i) =>{\n  let data=this.state.datas[i];\n  this.refs.name.value=data.name;\n  this.refs.roll.value=data.roll;\n\n\n  this.setState({\n    act:1,\n    index:i\n  });\n  this.refs.name.focus();\n}\n\n\nrender(){\n  let datas=this.state.datas;\n  return (\n    <div className=\"App\">\n      <Box textAlign=\"center\" color=\"text.primary\"  fontWeight=\"fontWeightBold\">{this.state.title}</Box>\n      <form ref=\"myform\" className=\"myForm\">\n        <input type=\"text\" ref=\"name\" placeholder=\"Name\" className=\"formfield\"/>\n        <input type=\"text\" ref=\"roll\" placeholder=\"Roll No\" className=\"formfield\"/>\n         <Button color=\"primary\" variant=\"contained\" onClick={(e)=>this.fsubmit(e)} className=\"myButton\">Submit </Button>  \n      </form>\n      <pre>\n        {datas.map((data,i)=>\n        <li key={i} className=\"myList\">\n          {i+1}.{data.name},{data.roll}\n          \n          <Button color=\"secondary\" variant=\"contained\" onClick={()=>this.fRemove(i)} className=\"myButton\">Delete</Button>\n         \n          <Button color=\"primary\" variant=\"\" onClick={()=>this.fEdit(i)} className=\"myButton\">Edit</Button>\n        </li>\n        )}\n        \n\n\n        </pre>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}